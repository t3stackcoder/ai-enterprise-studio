version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ai-studio-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ai_studio}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password_change_in_production}
      POSTGRES_DB: ${POSTGRES_DB:-ai_studio_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_studio"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Message Broker (for Celery) + Cache
  redis:
    image: redis:7-alpine
    container_name: ai-studio-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ai-studio-qdrant
    restart: unless-stopped
    ports:
      - "${QDRANT_PORT:-6333}:6333"  # HTTP API
      - "${QDRANT_GRPC_PORT:-6334}:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO - S3-Compatible Object Storage
  minio:
    image: minio/minio:latest
    container_name: ai-studio-minio
    restart: unless-stopped
    ports:
      - "${MINIO_PORT:-9000}:9000"  # API
      - "${MINIO_CONSOLE_PORT:-9001}:9001"  # Console
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MLflow - Model Tracking and Registry (Optional)
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: ai-studio-mlflow
    restart: unless-stopped
    ports:
      - "${MLFLOW_PORT:-5000}:5000"
    volumes:
      - mlflow_data:/mlflow
    environment:
      MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI:-postgresql://ai_studio:dev_password_change_in_production@postgres:5432/ai_studio_db}
      MLFLOW_DEFAULT_ARTIFACT_ROOT: ${MLFLOW_DEFAULT_ARTIFACT_ROOT:-s3://mlflow-artifacts/}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-minioadmin123}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    command: >
      mlflow server
      --backend-store-uri ${MLFLOW_BACKEND_STORE_URI:-postgresql://ai_studio:dev_password_change_in_production@postgres:5432/ai_studio_db}
      --default-artifact-root ${MLFLOW_DEFAULT_ARTIFACT_ROOT:-s3://mlflow-artifacts/}
      --host 0.0.0.0
      --port 5000
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  minio_data:
    driver: local
  mlflow_data:
    driver: local

networks:
  default:
    name: ai-studio-network
